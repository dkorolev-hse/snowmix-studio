#!/bin/bash
# Deliver mixer1 output and audio output to screen and audio

# IMPORTANT >>>>>You need to get port, ip and feed_id right<<<<<
if [ "X$SNOWMIX" = X ] ; then
    echo "You need to set the SNOWMIX environment variable to the base of the Snowmix installed directory"
    exit 1
fi
if [ "X$SNOWMIX_PORT" = X ]; then
    export SNOWMIX_PORT=9999
fi
if [ "X$SNOWMIX_IP" = X ]; then
    export SNOWMIX_IP=127.0.0.1
fi

# Check for the snowmix and gstreamer settings
if [ ! -f $SNOWMIX/scripts/gstreamer-settings -o ! -f $SNOWMIX/scripts/snowmix-settings ] ; then
    echo "Can not find the scripts/gstreamer-settings or the scripts/snowmix-settings in the directory set by the SNOWMIX environment variable"
    exit 1
fi

# Set video feed 
#feed_id=$1
#audio_feed_id=$1


# Load the Snowmix and GStreamer settings
. $SNOWMIX/scripts/gstreamer-settings
. $SNOWMIX/scripts/snowmix-settings
# This will set
# a) feed_rate
# b) feed_channels
# c) feed_control_pipe
# d) feed_width
# e) feed_height
# f) ctrsocket
# g) system_width
# h) system_height
# i) ratefraction
# j) snowmix
# k) channels
# l) rate

if [ X$ctrsocket = X -o X$system_width = X -o X$system_height = X ] ; then
    echo Failed to get control pipe or width or height from running snowmix
    exit 1
fi

VIDEOFORMAT=$VIDEOBGRA', width=(int)'$system_width', height=(int)'$system_height', framerate=(fraction)'$ratefraction
OUTPUTFORMAT=$VIDEOBGRA', width=(int)'$system_width', height=(int)'$system_height
#OUTPUTFORMAT=$VIDEOBGRA', width=853, height=480'
SNOWMIXVIDEOSRC=shmsrc

if [ X$1 = X ] ; then
    echo Failed to get path to directory for saving files
    exit 1
fi

i=0
file="$1/studio-$(date +%Y-%m-%d-%H:%M:%S)-$i.avi"
while [ $(ps -e | grep "snowmix" | wc -l) != 0 ]; do
    if [ -f "$file" ]; then
        i=`expr $i + 1`
        file="$1/studio-$(date +%Y-%m-%d-%H:%M)-$i.avi"
    else
        echo "
        $gstlaunch -v $SNOWMIXVIDEOSRC socket-path=$ctrsocket do-timestamp=true is-live=true ! \
        tee name=repeat ! \
        queue leaky=2 max-size-buffers=2 ! \
        $VIDEOFORMAT    ! \
        videoscale      ! \
        $OUTPUTFORMAT   ! \
        $VIDEOCONVERT   ! \
        autovideosink   \
        repeat.         ! \
        queue leaky=2   ! \
        $VIDEOFORMAT    ! \
        videoscale      ! \
        $OUTPUTFORMAT   ! \
        $VIDEOCONVERT   ! \
        x264enc bitrate=2000 tune=zerolatency speed-preset=5 ! \
        avimux          ! \
        queue           ! \
        filesink sync=false location=$file"

        $gstlaunch -v $SNOWMIXVIDEOSRC socket-path=$ctrsocket do-timestamp=true is-live=true ! \
        tee name=repeat ! \
        queue leaky=2 max-size-buffers=2 ! \
        $VIDEOFORMAT    ! \
        videoscale      ! \
        $OUTPUTFORMAT   ! \
        $VIDEOCONVERT   ! \
        autovideosink   \
        repeat.         ! \
        queue leaky=2   ! \
        $VIDEOFORMAT    ! \
        videoscale      ! \
        $OUTPUTFORMAT   ! \
        $VIDEOCONVERT   ! \
        x264enc bitrate=2000 tune=zerolatency speed-preset=5 ! \
        avimux          ! \
        queue           ! \
        filesink sync=false location=$file
        sleep 2
    fi
done
